//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neosinerji.BABOnlineTP.Business.ray {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InsurerServicesSoap", Namespace="http://tempuri.org/")]
    public partial class InsurerServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProductionIntegratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductionIntegratorXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductionIntegratorEmuOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimIntegratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CollectionIntegratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InsurerServices() {
            this.Url = global::Neosinerji.BABOnlineTP.Business.Properties.Settings.Default.Neosinerji_BABOnlineTP_Business_ray_InsurerServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProductionIntegratorCompletedEventHandler ProductionIntegratorCompleted;
        
        /// <remarks/>
        public event ProductionIntegratorXMLCompletedEventHandler ProductionIntegratorXMLCompleted;
        
        /// <remarks/>
        public event ProductionIntegratorEmuCompletedEventHandler ProductionIntegratorEmuCompleted;
        
        /// <remarks/>
        public event ClaimIntegratorCompletedEventHandler ClaimIntegratorCompleted;
        
        /// <remarks/>
        public event CollectionIntegratorCompletedEventHandler CollectionIntegratorCompleted;
        
        /// <remarks/>
        public event ManagementCompletedEventHandler ManagementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductionIntegrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductionIntegrator(string pDocument) {
            object[] results = this.Invoke("ProductionIntegrator", new object[] {
                        pDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProductionIntegratorAsync(string pDocument) {
            this.ProductionIntegratorAsync(pDocument, null);
        }
        
        /// <remarks/>
        public void ProductionIntegratorAsync(string pDocument, object userState) {
            if ((this.ProductionIntegratorOperationCompleted == null)) {
                this.ProductionIntegratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductionIntegratorOperationCompleted);
            }
            this.InvokeAsync("ProductionIntegrator", new object[] {
                        pDocument}, this.ProductionIntegratorOperationCompleted, userState);
        }
        
        private void OnProductionIntegratorOperationCompleted(object arg) {
            if ((this.ProductionIntegratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductionIntegratorCompleted(this, new ProductionIntegratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductionIntegratorXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductionIntegratorXML(System.Xml.XmlNode pDocument) {
            object[] results = this.Invoke("ProductionIntegratorXML", new object[] {
                        pDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProductionIntegratorXMLAsync(System.Xml.XmlNode pDocument) {
            this.ProductionIntegratorXMLAsync(pDocument, null);
        }
        
        /// <remarks/>
        public void ProductionIntegratorXMLAsync(System.Xml.XmlNode pDocument, object userState) {
            if ((this.ProductionIntegratorXMLOperationCompleted == null)) {
                this.ProductionIntegratorXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductionIntegratorXMLOperationCompleted);
            }
            this.InvokeAsync("ProductionIntegratorXML", new object[] {
                        pDocument}, this.ProductionIntegratorXMLOperationCompleted, userState);
        }
        
        private void OnProductionIntegratorXMLOperationCompleted(object arg) {
            if ((this.ProductionIntegratorXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductionIntegratorXMLCompleted(this, new ProductionIntegratorXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductionIntegratorEmu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductionIntegratorEmu(string pDocument) {
            object[] results = this.Invoke("ProductionIntegratorEmu", new object[] {
                        pDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProductionIntegratorEmuAsync(string pDocument) {
            this.ProductionIntegratorEmuAsync(pDocument, null);
        }
        
        /// <remarks/>
        public void ProductionIntegratorEmuAsync(string pDocument, object userState) {
            if ((this.ProductionIntegratorEmuOperationCompleted == null)) {
                this.ProductionIntegratorEmuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductionIntegratorEmuOperationCompleted);
            }
            this.InvokeAsync("ProductionIntegratorEmu", new object[] {
                        pDocument}, this.ProductionIntegratorEmuOperationCompleted, userState);
        }
        
        private void OnProductionIntegratorEmuOperationCompleted(object arg) {
            if ((this.ProductionIntegratorEmuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductionIntegratorEmuCompleted(this, new ProductionIntegratorEmuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClaimIntegrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClaimIntegrator(string pDocument) {
            object[] results = this.Invoke("ClaimIntegrator", new object[] {
                        pDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimIntegratorAsync(string pDocument) {
            this.ClaimIntegratorAsync(pDocument, null);
        }
        
        /// <remarks/>
        public void ClaimIntegratorAsync(string pDocument, object userState) {
            if ((this.ClaimIntegratorOperationCompleted == null)) {
                this.ClaimIntegratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimIntegratorOperationCompleted);
            }
            this.InvokeAsync("ClaimIntegrator", new object[] {
                        pDocument}, this.ClaimIntegratorOperationCompleted, userState);
        }
        
        private void OnClaimIntegratorOperationCompleted(object arg) {
            if ((this.ClaimIntegratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimIntegratorCompleted(this, new ClaimIntegratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CollectionIntegrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CollectionIntegrator(string pDocument) {
            object[] results = this.Invoke("CollectionIntegrator", new object[] {
                        pDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CollectionIntegratorAsync(string pDocument) {
            this.CollectionIntegratorAsync(pDocument, null);
        }
        
        /// <remarks/>
        public void CollectionIntegratorAsync(string pDocument, object userState) {
            if ((this.CollectionIntegratorOperationCompleted == null)) {
                this.CollectionIntegratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCollectionIntegratorOperationCompleted);
            }
            this.InvokeAsync("CollectionIntegrator", new object[] {
                        pDocument}, this.CollectionIntegratorOperationCompleted, userState);
        }
        
        private void OnCollectionIntegratorOperationCompleted(object arg) {
            if ((this.CollectionIntegratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CollectionIntegratorCompleted(this, new CollectionIntegratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Management", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Management(int pID, string pPassword) {
            object[] results = this.Invoke("Management", new object[] {
                        pID,
                        pPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ManagementAsync(int pID, string pPassword) {
            this.ManagementAsync(pID, pPassword, null);
        }
        
        /// <remarks/>
        public void ManagementAsync(int pID, string pPassword, object userState) {
            if ((this.ManagementOperationCompleted == null)) {
                this.ManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagementOperationCompleted);
            }
            this.InvokeAsync("Management", new object[] {
                        pID,
                        pPassword}, this.ManagementOperationCompleted, userState);
        }
        
        private void OnManagementOperationCompleted(object arg) {
            if ((this.ManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagementCompleted(this, new ManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProductionIntegratorCompletedEventHandler(object sender, ProductionIntegratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductionIntegratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductionIntegratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProductionIntegratorXMLCompletedEventHandler(object sender, ProductionIntegratorXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductionIntegratorXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductionIntegratorXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProductionIntegratorEmuCompletedEventHandler(object sender, ProductionIntegratorEmuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductionIntegratorEmuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductionIntegratorEmuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ClaimIntegratorCompletedEventHandler(object sender, ClaimIntegratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimIntegratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimIntegratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CollectionIntegratorCompletedEventHandler(object sender, CollectionIntegratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CollectionIntegratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CollectionIntegratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ManagementCompletedEventHandler(object sender, ManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591