//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neosinerji.BABOnlineTP.Business.unicosigorta.utilityService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IUtilityService", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntity))]
    public partial class UtilityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOnlinePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTCIPInfoByOldPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUavtDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarkaModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatValueListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDamageFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractedServiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtherServiceListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UtilityService() {
            this.Url = global::Neosinerji.BABOnlineTP.Business.Properties.Settings.Default.Neosinerji_BABOnlineTP_Business_unicosigorta_utilityService_UtilityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListSourceCompletedEventHandler GetListSourceCompleted;
        
        /// <remarks/>
        public event QueryOnlinePolicyCompletedEventHandler QueryOnlinePolicyCompleted;
        
        /// <remarks/>
        public event GetTCIPInfoByOldPolicyCompletedEventHandler GetTCIPInfoByOldPolicyCompleted;
        
        /// <remarks/>
        public event GetUavtDetailCompletedEventHandler GetUavtDetailCompleted;
        
        /// <remarks/>
        public event GetMarkaModelCompletedEventHandler GetMarkaModelCompleted;
        
        /// <remarks/>
        public event GetResponseCompletedEventHandler GetResponseCompleted;
        
        /// <remarks/>
        public event GetXmlCompletedEventHandler GetXmlCompleted;
        
        /// <remarks/>
        public event GetStatValueListCompletedEventHandler GetStatValueListCompleted;
        
        /// <remarks/>
        public event GetDamageFileInfoCompletedEventHandler GetDamageFileInfoCompleted;
        
        /// <remarks/>
        public event GetAgentListCompletedEventHandler GetAgentListCompleted;
        
        /// <remarks/>
        public event GetContractedServiceListCompletedEventHandler GetContractedServiceListCompleted;
        
        /// <remarks/>
        public event GetOtherServiceListCompletedEventHandler GetOtherServiceListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetListSource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ListSource GetListSource([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string authenticationKey, 
            [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string typeKey, 
            ref int alertNo, 
            [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string alertText, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstParam, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string secondParam, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string thirdParam, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fourthParam, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fifthParam, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sixthParam) {
            object[] results = this.Invoke("GetListSource", new object[] {
                        authenticationKey,
                        typeKey,
                        alertNo,
                        alertText,
                        firstParam,
                        secondParam,
                        thirdParam,
                        fourthParam,
                        fifthParam,
                        sixthParam});
            alertNo = ((int)(results[1]));
            alertText = ((string)(results[3]));
            return ((ListSource)(results[0]));
        }
        
        /// <remarks/>
        public void GetListSourceAsync(string authenticationKey, string typeKey, int alertNo, bool alertNoSpecified, string alertText, string firstParam, string secondParam, string thirdParam, string fourthParam, string fifthParam, string sixthParam) {
            this.GetListSourceAsync(authenticationKey, typeKey, alertNo, alertNoSpecified, alertText, firstParam, secondParam, thirdParam, fourthParam, fifthParam, sixthParam, null);
        }
        
        /// <remarks/>
        public void GetListSourceAsync(string authenticationKey, string typeKey, int alertNo, bool alertNoSpecified, string alertText, string firstParam, string secondParam, string thirdParam, string fourthParam, string fifthParam, string sixthParam, object userState) {
            if ((this.GetListSourceOperationCompleted == null)) {
                this.GetListSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListSourceOperationCompleted);
            }
            this.InvokeAsync("GetListSource", new object[] {
                        authenticationKey,
                        typeKey,
                        alertNo,
                        alertNoSpecified,
                        alertText,
                        firstParam,
                        secondParam,
                        thirdParam,
                        fourthParam,
                        fifthParam,
                        sixthParam}, this.GetListSourceOperationCompleted, userState);
        }
        
        private void OnGetListSourceOperationCompleted(object arg) {
            if ((this.GetListSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListSourceCompleted(this, new GetListSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/QueryOnlinePolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueryOnlinePolicy(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string authenticationKey, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string plate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string plateType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string queryInput, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string queryInputType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string renewFirmCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string renewAgentCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string renewPolicyNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string renewNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string registrySerial, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string registryNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mark, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string model, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string modelYear, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string licencePlate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredByNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredByName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref System.Nullable<System.DateTime> endDate, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)] ref KeyValuePairOfstringstring[] stats, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)] ref KeyValuePairOfstringstring[] informations, 
                    ref int alertNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string alertText, 
                    out bool QueryOnlinePolicyResult, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] out bool QueryOnlinePolicyResultSpecified) {
            object[] results = this.Invoke("QueryOnlinePolicy", new object[] {
                        authenticationKey,
                        productCode,
                        plate,
                        plateType,
                        queryInput,
                        queryInputType,
                        renewFirmCode,
                        renewAgentCode,
                        renewPolicyNo,
                        renewNo,
                        registrySerial,
                        registryNo,
                        mark,
                        model,
                        modelYear,
                        licencePlate,
                        insuredByNo,
                        insuredByName,
                        insuredNo,
                        insuredName,
                        endDate,
                        stats,
                        informations,
                        alertNo,
                        alertText});
            queryInput = ((string)(results[0]));
            queryInputType = ((string)(results[1]));
            renewFirmCode = ((string)(results[2]));
            renewAgentCode = ((string)(results[3]));
            renewPolicyNo = ((string)(results[4]));
            renewNo = ((string)(results[5]));
            mark = ((string)(results[6]));
            model = ((string)(results[7]));
            modelYear = ((string)(results[8]));
            licencePlate = ((string)(results[9]));
            insuredByNo = ((string)(results[10]));
            insuredByName = ((string)(results[11]));
            insuredNo = ((string)(results[12]));
            insuredName = ((string)(results[13]));
            endDate = ((System.Nullable<System.DateTime>)(results[14]));
           
            stats = ((KeyValuePairOfstringstring[])(results[15]));
            informations = ((KeyValuePairOfstringstring[])(results[16]));
            alertNo = ((int)(results[17]));
           
            alertText = ((string)(results[18]));
            QueryOnlinePolicyResult = ((bool)(results[19]));
            QueryOnlinePolicyResultSpecified = ((bool)(results[20]));
        }
        
        /// <remarks/>
        public void QueryOnlinePolicyAsync(
                    string authenticationKey, 
                    string productCode, 
                    string plate, 
                    string plateType, 
                    string queryInput, 
                    string queryInputType, 
                    string renewFirmCode, 
                    string renewAgentCode, 
                    string renewPolicyNo, 
                    string renewNo, 
                    string registrySerial, 
                    string registryNo, 
                    string mark, 
                    string model, 
                    string modelYear, 
                    string licencePlate, 
                    string insuredByNo, 
                    string insuredByName, 
                    string insuredNo, 
                    string insuredName, 
                    System.Nullable<System.DateTime> endDate, 
                    bool endDateSpecified, 
                    KeyValuePairOfstringstring[] stats, 
                    KeyValuePairOfstringstring[] informations, 
                    int alertNo, 
                    bool alertNoSpecified, 
                    string alertText) {
            this.QueryOnlinePolicyAsync(authenticationKey, productCode, plate, plateType, queryInput, queryInputType, renewFirmCode, renewAgentCode, renewPolicyNo, renewNo, registrySerial, registryNo, mark, model, modelYear, licencePlate, insuredByNo, insuredByName, insuredNo, insuredName, endDate, endDateSpecified, stats, informations, alertNo, alertNoSpecified, alertText, null);
        }
        
        /// <remarks/>
        public void QueryOnlinePolicyAsync(
                    string authenticationKey, 
                    string productCode, 
                    string plate, 
                    string plateType, 
                    string queryInput, 
                    string queryInputType, 
                    string renewFirmCode, 
                    string renewAgentCode, 
                    string renewPolicyNo, 
                    string renewNo, 
                    string registrySerial, 
                    string registryNo, 
                    string mark, 
                    string model, 
                    string modelYear, 
                    string licencePlate, 
                    string insuredByNo, 
                    string insuredByName, 
                    string insuredNo, 
                    string insuredName, 
                    System.Nullable<System.DateTime> endDate, 
                    bool endDateSpecified, 
                    KeyValuePairOfstringstring[] stats, 
                    KeyValuePairOfstringstring[] informations, 
                    int alertNo, 
                    bool alertNoSpecified, 
                    string alertText, 
                    object userState) {
            if ((this.QueryOnlinePolicyOperationCompleted == null)) {
                this.QueryOnlinePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOnlinePolicyOperationCompleted);
            }
            this.InvokeAsync("QueryOnlinePolicy", new object[] {
                        authenticationKey,
                        productCode,
                        plate,
                        plateType,
                        queryInput,
                        queryInputType,
                        renewFirmCode,
                        renewAgentCode,
                        renewPolicyNo,
                        renewNo,
                        registrySerial,
                        registryNo,
                        mark,
                        model,
                        modelYear,
                        licencePlate,
                        insuredByNo,
                        insuredByName,
                        insuredNo,
                        insuredName,
                        endDate,
                        endDateSpecified,
                        stats,
                        informations,
                        alertNo,
                        alertNoSpecified,
                        alertText}, this.QueryOnlinePolicyOperationCompleted, userState);
        }
        
        private void OnQueryOnlinePolicyOperationCompleted(object arg) {
            if ((this.QueryOnlinePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOnlinePolicyCompleted(this, new QueryOnlinePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetTCIPInfoByOldPolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTCIPInfoByOldPolicy(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string authenticationKey, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string insuranceCompany, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string agentNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string policyNo, 
                    ref int alertNo, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool alertNoSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string alertText, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredByNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredByMBB, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredByName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredMBB, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string insuredName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string vicinity, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string district, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string avenue, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string street, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string apartment, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string buildingNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string flatNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string postalCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string city, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string county, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string town, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string startDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mernisNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string dainiBank, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string dainiBranch, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string id_type, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)] ref KeyValuePairOfstringstring[] statistics, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)] ref KeyValuePairOfintstring[] informations, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string companyCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string companyName, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EntitySpaces.NonLife.TypeMapping")] ref EXT_WS_GECICI_DASK_SE_REC[] wdsk, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string identityToCustomerPage, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string oldPolicyNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref NPOL_UAVT_ADDRESS_TYPE UavtRiskAddress, 
                    out bool GetTCIPInfoByOldPolicyResult, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetTCIPInfoByOldPolicyResultSpecified) {
            object[] results = this.Invoke("GetTCIPInfoByOldPolicy", new object[] {
                        authenticationKey,
                        productCode,
                        insuranceCompany,
                        agentNo,
                        policyNo,
                        alertNo,
                        alertNoSpecified,
                        alertText,
                        insuredByNo,
                        insuredByMBB,
                        insuredByName,
                        insuredNo,
                        insuredMBB,
                        insuredName,
                        vicinity,
                        district,
                        avenue,
                        street,
                        apartment,
                        buildingNo,
                        flatNo,
                        postalCode,
                        city,
                        county,
                        town,
                        startDate,
                        mernisNo,
                        dainiBank,
                        dainiBranch,
                        id,
                        id_type,
                        statistics,
                        informations,
                        companyCode,
                        companyName,
                        wdsk,
                        identityToCustomerPage,
                        oldPolicyNum,
                        UavtRiskAddress});
            alertNo = ((int)(results[0]));
            alertNoSpecified = ((bool)(results[1]));
            alertText = ((string)(results[2]));
            insuredByNo = ((string)(results[3]));
            insuredByMBB = ((string)(results[4]));
            insuredByName = ((string)(results[5]));
            insuredNo = ((string)(results[6]));
            insuredMBB = ((string)(results[7]));
            insuredName = ((string)(results[8]));
            vicinity = ((string)(results[9]));
            district = ((string)(results[10]));
            avenue = ((string)(results[11]));
            street = ((string)(results[12]));
            apartment = ((string)(results[13]));
            buildingNo = ((string)(results[14]));
            flatNo = ((string)(results[15]));
            postalCode = ((string)(results[16]));
            city = ((string)(results[17]));
            county = ((string)(results[18]));
            town = ((string)(results[19]));
            startDate = ((string)(results[20]));
            mernisNo = ((string)(results[21]));
            dainiBank = ((string)(results[22]));
            dainiBranch = ((string)(results[23]));
            id = ((string)(results[24]));
            id_type = ((string)(results[25]));
            statistics = ((KeyValuePairOfstringstring[])(results[26]));
            informations = ((KeyValuePairOfintstring[])(results[27]));
            companyCode = ((string)(results[28]));
            companyName = ((string)(results[29]));
            wdsk = ((EXT_WS_GECICI_DASK_SE_REC[])(results[30]));
            identityToCustomerPage = ((string)(results[31]));
            oldPolicyNum = ((string)(results[32]));
            UavtRiskAddress = ((NPOL_UAVT_ADDRESS_TYPE)(results[33]));
            GetTCIPInfoByOldPolicyResult = ((bool)(results[34]));
            GetTCIPInfoByOldPolicyResultSpecified = ((bool)(results[35]));
        }
        
        /// <remarks/>
        public void GetTCIPInfoByOldPolicyAsync(
                    string authenticationKey, 
                    string productCode, 
                    string insuranceCompany, 
                    string agentNo, 
                    string policyNo, 
                    int alertNo, 
                    bool alertNoSpecified, 
                    string alertText, 
                    string insuredByNo, 
                    string insuredByMBB, 
                    string insuredByName, 
                    string insuredNo, 
                    string insuredMBB, 
                    string insuredName, 
                    string vicinity, 
                    string district, 
                    string avenue, 
                    string street, 
                    string apartment, 
                    string buildingNo, 
                    string flatNo, 
                    string postalCode, 
                    string city, 
                    string county, 
                    string town, 
                    string startDate, 
                    string mernisNo, 
                    string dainiBank, 
                    string dainiBranch, 
                    string id, 
                    string id_type, 
                    KeyValuePairOfstringstring[] statistics, 
                    KeyValuePairOfintstring[] informations, 
                    string companyCode, 
                    string companyName, 
                    EXT_WS_GECICI_DASK_SE_REC[] wdsk, 
                    string identityToCustomerPage, 
                    string oldPolicyNum, 
                    NPOL_UAVT_ADDRESS_TYPE UavtRiskAddress) {
            this.GetTCIPInfoByOldPolicyAsync(authenticationKey, productCode, insuranceCompany, agentNo, policyNo, alertNo, alertNoSpecified, alertText, insuredByNo, insuredByMBB, insuredByName, insuredNo, insuredMBB, insuredName, vicinity, district, avenue, street, apartment, buildingNo, flatNo, postalCode, city, county, town, startDate, mernisNo, dainiBank, dainiBranch, id, id_type, statistics, informations, companyCode, companyName, wdsk, identityToCustomerPage, oldPolicyNum, UavtRiskAddress, null);
        }
        
        /// <remarks/>
        public void GetTCIPInfoByOldPolicyAsync(
                    string authenticationKey, 
                    string productCode, 
                    string insuranceCompany, 
                    string agentNo, 
                    string policyNo, 
                    int alertNo, 
                    bool alertNoSpecified, 
                    string alertText, 
                    string insuredByNo, 
                    string insuredByMBB, 
                    string insuredByName, 
                    string insuredNo, 
                    string insuredMBB, 
                    string insuredName, 
                    string vicinity, 
                    string district, 
                    string avenue, 
                    string street, 
                    string apartment, 
                    string buildingNo, 
                    string flatNo, 
                    string postalCode, 
                    string city, 
                    string county, 
                    string town, 
                    string startDate, 
                    string mernisNo, 
                    string dainiBank, 
                    string dainiBranch, 
                    string id, 
                    string id_type, 
                    KeyValuePairOfstringstring[] statistics, 
                    KeyValuePairOfintstring[] informations, 
                    string companyCode, 
                    string companyName, 
                    EXT_WS_GECICI_DASK_SE_REC[] wdsk, 
                    string identityToCustomerPage, 
                    string oldPolicyNum, 
                    NPOL_UAVT_ADDRESS_TYPE UavtRiskAddress, 
                    object userState) {
            if ((this.GetTCIPInfoByOldPolicyOperationCompleted == null)) {
                this.GetTCIPInfoByOldPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTCIPInfoByOldPolicyOperationCompleted);
            }
            this.InvokeAsync("GetTCIPInfoByOldPolicy", new object[] {
                        authenticationKey,
                        productCode,
                        insuranceCompany,
                        agentNo,
                        policyNo,
                        alertNo,
                        alertNoSpecified,
                        alertText,
                        insuredByNo,
                        insuredByMBB,
                        insuredByName,
                        insuredNo,
                        insuredMBB,
                        insuredName,
                        vicinity,
                        district,
                        avenue,
                        street,
                        apartment,
                        buildingNo,
                        flatNo,
                        postalCode,
                        city,
                        county,
                        town,
                        startDate,
                        mernisNo,
                        dainiBank,
                        dainiBranch,
                        id,
                        id_type,
                        statistics,
                        informations,
                        companyCode,
                        companyName,
                        wdsk,
                        identityToCustomerPage,
                        oldPolicyNum,
                        UavtRiskAddress}, this.GetTCIPInfoByOldPolicyOperationCompleted, userState);
        }
        
        private void OnGetTCIPInfoByOldPolicyOperationCompleted(object arg) {
            if ((this.GetTCIPInfoByOldPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTCIPInfoByOldPolicyCompleted(this, new GetTCIPInfoByOldPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetUavtDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public NPOL_UAVT_ADDRESS_TYPE GetUavtDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string authenticationKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addressNum, ref int alertNo, [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool alertNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string alertText) {
            object[] results = this.Invoke("GetUavtDetail", new object[] {
                        authenticationKey,
                        addressNum,
                        alertNo,
                        alertNoSpecified,
                        alertText});
            alertNo = ((int)(results[1]));
            alertNoSpecified = ((bool)(results[2]));
            alertText = ((string)(results[3]));
            return ((NPOL_UAVT_ADDRESS_TYPE)(results[0]));
        }
        
        /// <remarks/>
        public void GetUavtDetailAsync(string authenticationKey, string addressNum, int alertNo, bool alertNoSpecified, string alertText) {
            this.GetUavtDetailAsync(authenticationKey, addressNum, alertNo, alertNoSpecified, alertText, null);
        }
        
        /// <remarks/>
        public void GetUavtDetailAsync(string authenticationKey, string addressNum, int alertNo, bool alertNoSpecified, string alertText, object userState) {
            if ((this.GetUavtDetailOperationCompleted == null)) {
                this.GetUavtDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUavtDetailOperationCompleted);
            }
            this.InvokeAsync("GetUavtDetail", new object[] {
                        authenticationKey,
                        addressNum,
                        alertNo,
                        alertNoSpecified,
                        alertText}, this.GetUavtDetailOperationCompleted, userState);
        }
        
        private void OnGetUavtDetailOperationCompleted(object arg) {
            if ((this.GetUavtDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUavtDetailCompleted(this, new GetUavtDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetMarkaModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMarkaModel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appsecuritykey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string akldegkod, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string birlikmarka, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string marka, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string model, out bool GetMarkaModelResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMarkaModelResultSpecified) {
            object[] results = this.Invoke("GetMarkaModel", new object[] {
                        appsecuritykey,
                        akldegkod,
                        birlikmarka,
                        marka,
                        model});
            marka = ((string)(results[0]));
            model = ((string)(results[1]));
            GetMarkaModelResult = ((bool)(results[2]));
            GetMarkaModelResultSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void GetMarkaModelAsync(string appsecuritykey, string akldegkod, string birlikmarka, string marka, string model) {
            this.GetMarkaModelAsync(appsecuritykey, akldegkod, birlikmarka, marka, model, null);
        }
        
        /// <remarks/>
        public void GetMarkaModelAsync(string appsecuritykey, string akldegkod, string birlikmarka, string marka, string model, object userState) {
            if ((this.GetMarkaModelOperationCompleted == null)) {
                this.GetMarkaModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarkaModelOperationCompleted);
            }
            this.InvokeAsync("GetMarkaModel", new object[] {
                        appsecuritykey,
                        akldegkod,
                        birlikmarka,
                        marka,
                        model}, this.GetMarkaModelOperationCompleted, userState);
        }
        
        private void OnGetMarkaModelOperationCompleted(object arg) {
            if ((this.GetMarkaModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarkaModelCompleted(this, new GetMarkaModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetResponse([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] GetResponse entity) {
            object[] results = this.Invoke("GetResponse", new object[] {
                        appSecurityKey,
                        entity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetResponseAsync(string appSecurityKey, GetResponse entity) {
            this.GetResponseAsync(appSecurityKey, entity, null);
        }
        
        /// <remarks/>
        public void GetResponseAsync(string appSecurityKey, GetResponse entity, object userState) {
            if ((this.GetResponseOperationCompleted == null)) {
                this.GetResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResponseOperationCompleted);
            }
            this.InvokeAsync("GetResponse", new object[] {
                        appSecurityKey,
                        entity}, this.GetResponseOperationCompleted, userState);
        }
        
        private void OnGetResponseOperationCompleted(object arg) {
            if ((this.GetResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResponseCompleted(this, new GetResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetXml([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string query) {
            object[] results = this.Invoke("GetXml", new object[] {
                        appSecurityKey,
                        query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlAsync(string appSecurityKey, string query) {
            this.GetXmlAsync(appSecurityKey, query, null);
        }
        
        /// <remarks/>
        public void GetXmlAsync(string appSecurityKey, string query, object userState) {
            if ((this.GetXmlOperationCompleted == null)) {
                this.GetXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlOperationCompleted);
            }
            this.InvokeAsync("GetXml", new object[] {
                        appSecurityKey,
                        query}, this.GetXmlOperationCompleted, userState);
        }
        
        private void OnGetXmlOperationCompleted(object arg) {
            if ((this.GetXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlCompleted(this, new GetXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetStatValueList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetStatValueList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string statCode) {
            object[] results = this.Invoke("GetStatValueList", new object[] {
                        appSecurityKey,
                        statCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatValueListAsync(string appSecurityKey, string statCode) {
            this.GetStatValueListAsync(appSecurityKey, statCode, null);
        }
        
        /// <remarks/>
        public void GetStatValueListAsync(string appSecurityKey, string statCode, object userState) {
            if ((this.GetStatValueListOperationCompleted == null)) {
                this.GetStatValueListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatValueListOperationCompleted);
            }
            this.InvokeAsync("GetStatValueList", new object[] {
                        appSecurityKey,
                        statCode}, this.GetStatValueListOperationCompleted, userState);
        }
        
        private void OnGetStatValueListOperationCompleted(object arg) {
            if ((this.GetStatValueListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatValueListCompleted(this, new GetStatValueListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetDamageFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetDamageFileInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string damageFileNo) {
            object[] results = this.Invoke("GetDamageFileInfo", new object[] {
                        appSecurityKey,
                        damageFileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDamageFileInfoAsync(string appSecurityKey, string damageFileNo) {
            this.GetDamageFileInfoAsync(appSecurityKey, damageFileNo, null);
        }
        
        /// <remarks/>
        public void GetDamageFileInfoAsync(string appSecurityKey, string damageFileNo, object userState) {
            if ((this.GetDamageFileInfoOperationCompleted == null)) {
                this.GetDamageFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDamageFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetDamageFileInfo", new object[] {
                        appSecurityKey,
                        damageFileNo}, this.GetDamageFileInfoOperationCompleted, userState);
        }
        
        private void OnGetDamageFileInfoOperationCompleted(object arg) {
            if ((this.GetDamageFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDamageFileInfoCompleted(this, new GetDamageFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetAgentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetAgentList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cityCode) {
            object[] results = this.Invoke("GetAgentList", new object[] {
                        appSecurityKey,
                        cityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentListAsync(string appSecurityKey, string cityCode) {
            this.GetAgentListAsync(appSecurityKey, cityCode, null);
        }
        
        /// <remarks/>
        public void GetAgentListAsync(string appSecurityKey, string cityCode, object userState) {
            if ((this.GetAgentListOperationCompleted == null)) {
                this.GetAgentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentListOperationCompleted);
            }
            this.InvokeAsync("GetAgentList", new object[] {
                        appSecurityKey,
                        cityCode}, this.GetAgentListOperationCompleted, userState);
        }
        
        private void OnGetAgentListOperationCompleted(object arg) {
            if ((this.GetAgentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentListCompleted(this, new GetAgentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetContractedServiceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetContractedServiceList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string markCode) {
            object[] results = this.Invoke("GetContractedServiceList", new object[] {
                        appSecurityKey,
                        cityCode,
                        markCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractedServiceListAsync(string appSecurityKey, string cityCode, string markCode) {
            this.GetContractedServiceListAsync(appSecurityKey, cityCode, markCode, null);
        }
        
        /// <remarks/>
        public void GetContractedServiceListAsync(string appSecurityKey, string cityCode, string markCode, object userState) {
            if ((this.GetContractedServiceListOperationCompleted == null)) {
                this.GetContractedServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractedServiceListOperationCompleted);
            }
            this.InvokeAsync("GetContractedServiceList", new object[] {
                        appSecurityKey,
                        cityCode,
                        markCode}, this.GetContractedServiceListOperationCompleted, userState);
        }
        
        private void OnGetContractedServiceListOperationCompleted(object arg) {
            if ((this.GetContractedServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractedServiceListCompleted(this, new GetContractedServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUtilityService/GetOtherServiceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetOtherServiceList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appSecurityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sourceCode) {
            object[] results = this.Invoke("GetOtherServiceList", new object[] {
                        appSecurityKey,
                        cityCode,
                        sourceCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtherServiceListAsync(string appSecurityKey, string cityCode, string sourceCode) {
            this.GetOtherServiceListAsync(appSecurityKey, cityCode, sourceCode, null);
        }
        
        /// <remarks/>
        public void GetOtherServiceListAsync(string appSecurityKey, string cityCode, string sourceCode, object userState) {
            if ((this.GetOtherServiceListOperationCompleted == null)) {
                this.GetOtherServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherServiceListOperationCompleted);
            }
            this.InvokeAsync("GetOtherServiceList", new object[] {
                        appSecurityKey,
                        cityCode,
                        sourceCode}, this.GetOtherServiceListOperationCompleted, userState);
        }
        
        private void OnGetOtherServiceListOperationCompleted(object arg) {
            if ((this.GetOtherServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherServiceListCompleted(this, new GetOtherServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EntitySpaces")]
    public partial class ListSource {
        
        private KeyValuePairOfstringstring[] dataField;
        
        private string defaultValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)]
        public KeyValuePairOfstringstring[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    public partial class KeyValuePairOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ApplicationBlocks.Common")]
    public partial class BaseEntity {
        
        private int alertNoField;
        
        private bool alertNoFieldSpecified;
        
        private string alertTextField;
        
        private bool isSuccessfulField;
        
        private bool isSuccessfulFieldSpecified;
        
        /// <remarks/>
        public int AlertNo {
            get {
                return this.alertNoField;
            }
            set {
                this.alertNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlertNoSpecified {
            get {
                return this.alertNoFieldSpecified;
            }
            set {
                this.alertNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlertText {
            get {
                return this.alertTextField;
            }
            set {
                this.alertTextField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSuccessfulSpecified {
            get {
                return this.isSuccessfulFieldSpecified;
            }
            set {
                this.isSuccessfulFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EntitySpaces.External.Policy.ReturningTyp" +
        "e")]
    public partial class GetResponse : BaseEntity {
        
        private string actionField;
        
        private string contentTypeField;
        
        private string methodField;
        
        private string requestField;
        
        private string urlField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Request {
            get {
                return this.requestField;
            }
            set {
                this.requestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EntitySpaces.NonLife.TypeMapping")]
    public partial class NPOL_UAVT_ADDRESS_TYPE {
        
        private System.Nullable<long> aDRESIDField;
        
        private bool aDRESIDFieldSpecified;
        
        private string bELDEADIField;
        
        private System.Nullable<int> bELDEKODUField;
        
        private bool bELDEKODUFieldSpecified;
        
        private string bINAADIField;
        
        private System.Nullable<int> bINAKODUField;
        
        private bool bINAKODUFieldSpecified;
        
        private string dAIREADIField;
        
        private System.Nullable<long> dAIREKODUField;
        
        private bool dAIREKODUFieldSpecified;
        
        private string iLADIField;
        
        private string iLCEADIField;
        
        private System.Nullable<int> iLCEKODUField;
        
        private bool iLCEKODUFieldSpecified;
        
        private System.Nullable<int> iLKODUField;
        
        private bool iLKODUFieldSpecified;
        
        private string mAHALLEADIField;
        
        private System.Nullable<int> mAHALLEKODUField;
        
        private bool mAHALLEKODUFieldSpecified;
        
        private string pOSTAKODUField;
        
        private string sOKAKADIField;
        
        private System.Nullable<int> sOKAKKODUField;
        
        private bool sOKAKKODUFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ADRESID {
            get {
                return this.aDRESIDField;
            }
            set {
                this.aDRESIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ADRESIDSpecified {
            get {
                return this.aDRESIDFieldSpecified;
            }
            set {
                this.aDRESIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BELDEADI {
            get {
                return this.bELDEADIField;
            }
            set {
                this.bELDEADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BELDEKODU {
            get {
                return this.bELDEKODUField;
            }
            set {
                this.bELDEKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BELDEKODUSpecified {
            get {
                return this.bELDEKODUFieldSpecified;
            }
            set {
                this.bELDEKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BINAADI {
            get {
                return this.bINAADIField;
            }
            set {
                this.bINAADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BINAKODU {
            get {
                return this.bINAKODUField;
            }
            set {
                this.bINAKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BINAKODUSpecified {
            get {
                return this.bINAKODUFieldSpecified;
            }
            set {
                this.bINAKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DAIREADI {
            get {
                return this.dAIREADIField;
            }
            set {
                this.dAIREADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DAIREKODU {
            get {
                return this.dAIREKODUField;
            }
            set {
                this.dAIREKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DAIREKODUSpecified {
            get {
                return this.dAIREKODUFieldSpecified;
            }
            set {
                this.dAIREKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ILADI {
            get {
                return this.iLADIField;
            }
            set {
                this.iLADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ILCEADI {
            get {
                return this.iLCEADIField;
            }
            set {
                this.iLCEADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ILCEKODU {
            get {
                return this.iLCEKODUField;
            }
            set {
                this.iLCEKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ILCEKODUSpecified {
            get {
                return this.iLCEKODUFieldSpecified;
            }
            set {
                this.iLCEKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ILKODU {
            get {
                return this.iLKODUField;
            }
            set {
                this.iLKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ILKODUSpecified {
            get {
                return this.iLKODUFieldSpecified;
            }
            set {
                this.iLKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MAHALLEADI {
            get {
                return this.mAHALLEADIField;
            }
            set {
                this.mAHALLEADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MAHALLEKODU {
            get {
                return this.mAHALLEKODUField;
            }
            set {
                this.mAHALLEKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MAHALLEKODUSpecified {
            get {
                return this.mAHALLEKODUFieldSpecified;
            }
            set {
                this.mAHALLEKODUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string POSTAKODU {
            get {
                return this.pOSTAKODUField;
            }
            set {
                this.pOSTAKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SOKAKADI {
            get {
                return this.sOKAKADIField;
            }
            set {
                this.sOKAKADIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SOKAKKODU {
            get {
                return this.sOKAKKODUField;
            }
            set {
                this.sOKAKKODUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SOKAKKODUSpecified {
            get {
                return this.sOKAKKODUFieldSpecified;
            }
            set {
                this.sOKAKKODUFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EntitySpaces.NonLife.TypeMapping")]
    public partial class EXT_WS_GECICI_DASK_SE_REC {
        
        private string cODEField;
        
        private string eMAILTEXTField;
        
        private string iSVALIDATEDField;
        
        private string mERNISNUMField;
        
        private string mOBILENUMField;
        
        private string nAMEField;
        
        private string nATIONALITYTYPEField;
        
        private string oP_IDField;
        
        private string pARTYTYPEField;
        
        private string pASSPORTNUMField;
        
        private string pOLICYNUMField;
        
        private string rEALCORPORATEINDField;
        
        private string sIGORTALI_ETTIRENField;
        
        private string sIGORTALI_ETTIREN_NOField;
        
        private System.Nullable<int> sIRKET_KODField;
        
        private bool sIRKET_KODFieldSpecified;
        
        private string sURNAMEField;
        
        private System.Nullable<System.DateTime> tARIHField;
        
        private bool tARIHFieldSpecified;
        
        private string tAXNUMField;
        
        private string tAXOFFICEField;
        
        private string tELEPHONENUMField;
        
        private string tITLEField;
        
        private string vILLAGECODEField;
        
        private string vILLAGEINSTANCEIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CODE {
            get {
                return this.cODEField;
            }
            set {
                this.cODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EMAILTEXT {
            get {
                return this.eMAILTEXTField;
            }
            set {
                this.eMAILTEXTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ISVALIDATED {
            get {
                return this.iSVALIDATEDField;
            }
            set {
                this.iSVALIDATEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MERNISNUM {
            get {
                return this.mERNISNUMField;
            }
            set {
                this.mERNISNUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MOBILENUM {
            get {
                return this.mOBILENUMField;
            }
            set {
                this.mOBILENUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NAME {
            get {
                return this.nAMEField;
            }
            set {
                this.nAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NATIONALITYTYPE {
            get {
                return this.nATIONALITYTYPEField;
            }
            set {
                this.nATIONALITYTYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OP_ID {
            get {
                return this.oP_IDField;
            }
            set {
                this.oP_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PARTYTYPE {
            get {
                return this.pARTYTYPEField;
            }
            set {
                this.pARTYTYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PASSPORTNUM {
            get {
                return this.pASSPORTNUMField;
            }
            set {
                this.pASSPORTNUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string POLICYNUM {
            get {
                return this.pOLICYNUMField;
            }
            set {
                this.pOLICYNUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string REALCORPORATEIND {
            get {
                return this.rEALCORPORATEINDField;
            }
            set {
                this.rEALCORPORATEINDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SIGORTALI_ETTIREN {
            get {
                return this.sIGORTALI_ETTIRENField;
            }
            set {
                this.sIGORTALI_ETTIRENField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SIGORTALI_ETTIREN_NO {
            get {
                return this.sIGORTALI_ETTIREN_NOField;
            }
            set {
                this.sIGORTALI_ETTIREN_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SIRKET_KOD {
            get {
                return this.sIRKET_KODField;
            }
            set {
                this.sIRKET_KODField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SIRKET_KODSpecified {
            get {
                return this.sIRKET_KODFieldSpecified;
            }
            set {
                this.sIRKET_KODFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SURNAME {
            get {
                return this.sURNAMEField;
            }
            set {
                this.sURNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TARIH {
            get {
                return this.tARIHField;
            }
            set {
                this.tARIHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TARIHSpecified {
            get {
                return this.tARIHFieldSpecified;
            }
            set {
                this.tARIHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TAXNUM {
            get {
                return this.tAXNUMField;
            }
            set {
                this.tAXNUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TAXOFFICE {
            get {
                return this.tAXOFFICEField;
            }
            set {
                this.tAXOFFICEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TELEPHONENUM {
            get {
                return this.tELEPHONENUMField;
            }
            set {
                this.tELEPHONENUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TITLE {
            get {
                return this.tITLEField;
            }
            set {
                this.tITLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VILLAGECODE {
            get {
                return this.vILLAGECODEField;
            }
            set {
                this.vILLAGECODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VILLAGEINSTANCEID {
            get {
                return this.vILLAGEINSTANCEIDField;
            }
            set {
                this.vILLAGEINSTANCEIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    public partial class KeyValuePairOfintstring {
        
        private int keyField;
        
        private string valueField;
        
        /// <remarks/>
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetListSourceCompletedEventHandler(object sender, GetListSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListSource Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListSource)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int alertNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool alertNoSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string alertText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void QueryOnlinePolicyCompletedEventHandler(object sender, QueryOnlinePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOnlinePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOnlinePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string queryInput {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string queryInputType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string renewFirmCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string renewAgentCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string renewPolicyNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string renewNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string mark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string model {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string modelYear {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string licencePlate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string insuredByNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string insuredByName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string insuredNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string insuredName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> endDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public bool endDateSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public KeyValuePairOfstringstring[] stats {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringstring[])(this.results[16]));
            }
        }
        
        /// <remarks/>
        public KeyValuePairOfstringstring[] informations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringstring[])(this.results[17]));
            }
        }
        
        /// <remarks/>
        public int alertNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public bool alertNoSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public string alertText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public bool QueryOnlinePolicyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public bool QueryOnlinePolicyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[22]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTCIPInfoByOldPolicyCompletedEventHandler(object sender, GetTCIPInfoByOldPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTCIPInfoByOldPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTCIPInfoByOldPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int alertNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool alertNoSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string alertText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string insuredByNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string insuredByMBB {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string insuredByName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string insuredNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string insuredMBB {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string insuredName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string vicinity {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string avenue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string apartment {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string buildingNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string flatNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public string town {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public string startDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public string mernisNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public string dainiBank {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[22]));
            }
        }
        
        /// <remarks/>
        public string dainiBranch {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[23]));
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[24]));
            }
        }
        
        /// <remarks/>
        public string id_type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[25]));
            }
        }
        
        /// <remarks/>
        public KeyValuePairOfstringstring[] statistics {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringstring[])(this.results[26]));
            }
        }
        
        /// <remarks/>
        public KeyValuePairOfintstring[] informations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfintstring[])(this.results[27]));
            }
        }
        
        /// <remarks/>
        public string companyCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[28]));
            }
        }
        
        /// <remarks/>
        public string companyName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[29]));
            }
        }
        
        /// <remarks/>
        public EXT_WS_GECICI_DASK_SE_REC[] wdsk {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EXT_WS_GECICI_DASK_SE_REC[])(this.results[30]));
            }
        }
        
        /// <remarks/>
        public string identityToCustomerPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[31]));
            }
        }
        
        /// <remarks/>
        public string oldPolicyNum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[32]));
            }
        }
        
        /// <remarks/>
        public NPOL_UAVT_ADDRESS_TYPE UavtRiskAddress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NPOL_UAVT_ADDRESS_TYPE)(this.results[33]));
            }
        }
        
        /// <remarks/>
        public bool GetTCIPInfoByOldPolicyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[34]));
            }
        }
        
        /// <remarks/>
        public bool GetTCIPInfoByOldPolicyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[35]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUavtDetailCompletedEventHandler(object sender, GetUavtDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUavtDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUavtDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NPOL_UAVT_ADDRESS_TYPE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NPOL_UAVT_ADDRESS_TYPE)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int alertNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool alertNoSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string alertText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMarkaModelCompletedEventHandler(object sender, GetMarkaModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarkaModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarkaModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string marka {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string model {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool GetMarkaModelResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool GetMarkaModelResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetResponseCompletedEventHandler(object sender, GetResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetXmlCompletedEventHandler(object sender, GetXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatValueListCompletedEventHandler(object sender, GetStatValueListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatValueListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatValueListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDamageFileInfoCompletedEventHandler(object sender, GetDamageFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDamageFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDamageFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAgentListCompletedEventHandler(object sender, GetAgentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetContractedServiceListCompletedEventHandler(object sender, GetContractedServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractedServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractedServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOtherServiceListCompletedEventHandler(object sender, GetOtherServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtherServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtherServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591