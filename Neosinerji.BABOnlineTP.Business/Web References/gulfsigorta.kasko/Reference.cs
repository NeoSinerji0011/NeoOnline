//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Neosinerji.BABOnlineTP.Business.gulfsigorta.kasko {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SFSPolicyIntegrationServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SFSPolicyIntegrationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryPolicyDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback PolicySearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovalCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellationFromInceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellationMidTermOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellationNonPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsuredIncludeEndorsementOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsuredExcludeEndorsementOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEndorsmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDaskPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoverageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchWithIdentityPlateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProposalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditCardPaymentTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProposalUpdateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProposalUpdateMortgagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProposalQuestionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintDocumentByEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePolicyAndPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProposalsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SFSPolicyIntegrationService() {
            this.Url = global::Neosinerji.BABOnlineTP.Business.Properties.Settings.Default.Neosinerji_BABOnlineTP_Business_gulfsigorta_kasko_SFSPolicyIntegrationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryPolicyDetailCompletedEventHandler QueryPolicyDetailCompleted;
        
        /// <remarks/>
        public event PolicySearchCompletedEventHandler PolicySearchCompleted;
        
        /// <remarks/>
        public event ApproveProposalCompletedEventHandler ApproveProposalCompleted;
        
        /// <remarks/>
        public event DeleteProposalCompletedEventHandler DeleteProposalCompleted;
        
        /// <remarks/>
        public event ApprovalCancellationCompletedEventHandler ApprovalCancellationCompleted;
        
        /// <remarks/>
        public event CreateProposalCompletedEventHandler CreateProposalCompleted;
        
        /// <remarks/>
        public event CancellationFromInceptionCompletedEventHandler CancellationFromInceptionCompleted;
        
        /// <remarks/>
        public event CancellationMidTermCompletedEventHandler CancellationMidTermCompleted;
        
        /// <remarks/>
        public event CancellationNonPaymentCompletedEventHandler CancellationNonPaymentCompleted;
        
        /// <remarks/>
        public event InsuredIncludeEndorsementCompletedEventHandler InsuredIncludeEndorsementCompleted;
        
        /// <remarks/>
        public event InsuredExcludeEndorsementCompletedEventHandler InsuredExcludeEndorsementCompleted;
        
        /// <remarks/>
        public event CreateEndorsmentCompletedEventHandler CreateEndorsmentCompleted;
        
        /// <remarks/>
        public event QueryDaskPolicyCompletedEventHandler QueryDaskPolicyCompleted;
        
        /// <remarks/>
        public event GetRenewalListCompletedEventHandler GetRenewalListCompleted;
        
        /// <remarks/>
        public event GetCoverageListCompletedEventHandler GetCoverageListCompleted;
        
        /// <remarks/>
        public event SearchWithIdentityPlateCompletedEventHandler SearchWithIdentityPlateCompleted;
        
        /// <remarks/>
        public event EditProposalCompletedEventHandler EditProposalCompleted;
        
        /// <remarks/>
        public event GetCreditCardPaymentTypeListCompletedEventHandler GetCreditCardPaymentTypeListCompleted;
        
        /// <remarks/>
        public event GetPaymentsByDateCompletedEventHandler GetPaymentsByDateCompleted;
        
        /// <remarks/>
        public event ProposalUpdateClientCompletedEventHandler ProposalUpdateClientCompleted;
        
        /// <remarks/>
        public event ProposalUpdateMortgagerCompletedEventHandler ProposalUpdateMortgagerCompleted;
        
        /// <remarks/>
        public event ProposalQuestionUpdateCompletedEventHandler ProposalQuestionUpdateCompleted;
        
        /// <remarks/>
        public event PrintDocumentCompletedEventHandler PrintDocumentCompleted;
        
        /// <remarks/>
        public event PrintDocumentByEMailCompletedEventHandler PrintDocumentByEMailCompleted;
        
        /// <remarks/>
        public event CreatePolicyAndPrintCompletedEventHandler CreatePolicyAndPrintCompleted;
        
        /// <remarks/>
        public event CreateProposalsCompletedEventHandler CreateProposalsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPolicyDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryPolicyDetail(string sRequestXml) {
            object[] results = this.Invoke("QueryPolicyDetail", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPolicyDetailAsync(string sRequestXml) {
            this.QueryPolicyDetailAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void QueryPolicyDetailAsync(string sRequestXml, object userState) {
            if ((this.QueryPolicyDetailOperationCompleted == null)) {
                this.QueryPolicyDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPolicyDetailOperationCompleted);
            }
            this.InvokeAsync("QueryPolicyDetail", new object[] {
                        sRequestXml}, this.QueryPolicyDetailOperationCompleted, userState);
        }
        
        private void OnQueryPolicyDetailOperationCompleted(object arg) {
            if ((this.QueryPolicyDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPolicyDetailCompleted(this, new QueryPolicyDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PolicySearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PolicySearch(string sRequestXml) {
            object[] results = this.Invoke("PolicySearch", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PolicySearchAsync(string sRequestXml) {
            this.PolicySearchAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void PolicySearchAsync(string sRequestXml, object userState) {
            if ((this.PolicySearchOperationCompleted == null)) {
                this.PolicySearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPolicySearchOperationCompleted);
            }
            this.InvokeAsync("PolicySearch", new object[] {
                        sRequestXml}, this.PolicySearchOperationCompleted, userState);
        }
        
        private void OnPolicySearchOperationCompleted(object arg) {
            if ((this.PolicySearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PolicySearchCompleted(this, new PolicySearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApproveProposal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ApproveProposal(string sRequestXml) {
            object[] results = this.Invoke("ApproveProposal", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveProposalAsync(string sRequestXml) {
            this.ApproveProposalAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void ApproveProposalAsync(string sRequestXml, object userState) {
            if ((this.ApproveProposalOperationCompleted == null)) {
                this.ApproveProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveProposalOperationCompleted);
            }
            this.InvokeAsync("ApproveProposal", new object[] {
                        sRequestXml}, this.ApproveProposalOperationCompleted, userState);
        }
        
        private void OnApproveProposalOperationCompleted(object arg) {
            if ((this.ApproveProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveProposalCompleted(this, new ApproveProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProposal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteProposal(string sRequestXml) {
            object[] results = this.Invoke("DeleteProposal", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProposalAsync(string sRequestXml) {
            this.DeleteProposalAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void DeleteProposalAsync(string sRequestXml, object userState) {
            if ((this.DeleteProposalOperationCompleted == null)) {
                this.DeleteProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProposalOperationCompleted);
            }
            this.InvokeAsync("DeleteProposal", new object[] {
                        sRequestXml}, this.DeleteProposalOperationCompleted, userState);
        }
        
        private void OnDeleteProposalOperationCompleted(object arg) {
            if ((this.DeleteProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProposalCompleted(this, new DeleteProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApprovalCancellation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ApprovalCancellation(string sRequestXml) {
            object[] results = this.Invoke("ApprovalCancellation", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovalCancellationAsync(string sRequestXml) {
            this.ApprovalCancellationAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void ApprovalCancellationAsync(string sRequestXml, object userState) {
            if ((this.ApprovalCancellationOperationCompleted == null)) {
                this.ApprovalCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovalCancellationOperationCompleted);
            }
            this.InvokeAsync("ApprovalCancellation", new object[] {
                        sRequestXml}, this.ApprovalCancellationOperationCompleted, userState);
        }
        
        private void OnApprovalCancellationOperationCompleted(object arg) {
            if ((this.ApprovalCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovalCancellationCompleted(this, new ApprovalCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProposal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateProposal(string sRequestXml) {
            object[] results = this.Invoke("CreateProposal", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProposalAsync(string sRequestXml) {
            this.CreateProposalAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CreateProposalAsync(string sRequestXml, object userState) {
            if ((this.CreateProposalOperationCompleted == null)) {
                this.CreateProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProposalOperationCompleted);
            }
            this.InvokeAsync("CreateProposal", new object[] {
                        sRequestXml}, this.CreateProposalOperationCompleted, userState);
        }
        
        private void OnCreateProposalOperationCompleted(object arg) {
            if ((this.CreateProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProposalCompleted(this, new CreateProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancellationFromInception", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancellationFromInception(string sRequestXml) {
            object[] results = this.Invoke("CancellationFromInception", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancellationFromInceptionAsync(string sRequestXml) {
            this.CancellationFromInceptionAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CancellationFromInceptionAsync(string sRequestXml, object userState) {
            if ((this.CancellationFromInceptionOperationCompleted == null)) {
                this.CancellationFromInceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellationFromInceptionOperationCompleted);
            }
            this.InvokeAsync("CancellationFromInception", new object[] {
                        sRequestXml}, this.CancellationFromInceptionOperationCompleted, userState);
        }
        
        private void OnCancellationFromInceptionOperationCompleted(object arg) {
            if ((this.CancellationFromInceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellationFromInceptionCompleted(this, new CancellationFromInceptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancellationMidTerm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancellationMidTerm(string sRequestXml) {
            object[] results = this.Invoke("CancellationMidTerm", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancellationMidTermAsync(string sRequestXml) {
            this.CancellationMidTermAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CancellationMidTermAsync(string sRequestXml, object userState) {
            if ((this.CancellationMidTermOperationCompleted == null)) {
                this.CancellationMidTermOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellationMidTermOperationCompleted);
            }
            this.InvokeAsync("CancellationMidTerm", new object[] {
                        sRequestXml}, this.CancellationMidTermOperationCompleted, userState);
        }
        
        private void OnCancellationMidTermOperationCompleted(object arg) {
            if ((this.CancellationMidTermCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellationMidTermCompleted(this, new CancellationMidTermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancellationNonPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CancellationNonPayment(string sRequestXml) {
            object[] results = this.Invoke("CancellationNonPayment", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CancellationNonPaymentAsync(string sRequestXml) {
            this.CancellationNonPaymentAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CancellationNonPaymentAsync(string sRequestXml, object userState) {
            if ((this.CancellationNonPaymentOperationCompleted == null)) {
                this.CancellationNonPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellationNonPaymentOperationCompleted);
            }
            this.InvokeAsync("CancellationNonPayment", new object[] {
                        sRequestXml}, this.CancellationNonPaymentOperationCompleted, userState);
        }
        
        private void OnCancellationNonPaymentOperationCompleted(object arg) {
            if ((this.CancellationNonPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellationNonPaymentCompleted(this, new CancellationNonPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsuredIncludeEndorsement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsuredIncludeEndorsement(string sRequestXml) {
            object[] results = this.Invoke("InsuredIncludeEndorsement", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsuredIncludeEndorsementAsync(string sRequestXml) {
            this.InsuredIncludeEndorsementAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void InsuredIncludeEndorsementAsync(string sRequestXml, object userState) {
            if ((this.InsuredIncludeEndorsementOperationCompleted == null)) {
                this.InsuredIncludeEndorsementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsuredIncludeEndorsementOperationCompleted);
            }
            this.InvokeAsync("InsuredIncludeEndorsement", new object[] {
                        sRequestXml}, this.InsuredIncludeEndorsementOperationCompleted, userState);
        }
        
        private void OnInsuredIncludeEndorsementOperationCompleted(object arg) {
            if ((this.InsuredIncludeEndorsementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsuredIncludeEndorsementCompleted(this, new InsuredIncludeEndorsementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsuredExcludeEndorsement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsuredExcludeEndorsement(string sRequestXml) {
            object[] results = this.Invoke("InsuredExcludeEndorsement", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsuredExcludeEndorsementAsync(string sRequestXml) {
            this.InsuredExcludeEndorsementAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void InsuredExcludeEndorsementAsync(string sRequestXml, object userState) {
            if ((this.InsuredExcludeEndorsementOperationCompleted == null)) {
                this.InsuredExcludeEndorsementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsuredExcludeEndorsementOperationCompleted);
            }
            this.InvokeAsync("InsuredExcludeEndorsement", new object[] {
                        sRequestXml}, this.InsuredExcludeEndorsementOperationCompleted, userState);
        }
        
        private void OnInsuredExcludeEndorsementOperationCompleted(object arg) {
            if ((this.InsuredExcludeEndorsementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsuredExcludeEndorsementCompleted(this, new InsuredExcludeEndorsementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateEndorsment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateEndorsment(string sRequestXml) {
            object[] results = this.Invoke("CreateEndorsment", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEndorsmentAsync(string sRequestXml) {
            this.CreateEndorsmentAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CreateEndorsmentAsync(string sRequestXml, object userState) {
            if ((this.CreateEndorsmentOperationCompleted == null)) {
                this.CreateEndorsmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEndorsmentOperationCompleted);
            }
            this.InvokeAsync("CreateEndorsment", new object[] {
                        sRequestXml}, this.CreateEndorsmentOperationCompleted, userState);
        }
        
        private void OnCreateEndorsmentOperationCompleted(object arg) {
            if ((this.CreateEndorsmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEndorsmentCompleted(this, new CreateEndorsmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryDaskPolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryDaskPolicy(string sRequestXml) {
            object[] results = this.Invoke("QueryDaskPolicy", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDaskPolicyAsync(string sRequestXml) {
            this.QueryDaskPolicyAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void QueryDaskPolicyAsync(string sRequestXml, object userState) {
            if ((this.QueryDaskPolicyOperationCompleted == null)) {
                this.QueryDaskPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDaskPolicyOperationCompleted);
            }
            this.InvokeAsync("QueryDaskPolicy", new object[] {
                        sRequestXml}, this.QueryDaskPolicyOperationCompleted, userState);
        }
        
        private void OnQueryDaskPolicyOperationCompleted(object arg) {
            if ((this.QueryDaskPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDaskPolicyCompleted(this, new QueryDaskPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRenewalList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRenewalList(string sRequestXml) {
            object[] results = this.Invoke("GetRenewalList", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalListAsync(string sRequestXml) {
            this.GetRenewalListAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void GetRenewalListAsync(string sRequestXml, object userState) {
            if ((this.GetRenewalListOperationCompleted == null)) {
                this.GetRenewalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalListOperationCompleted);
            }
            this.InvokeAsync("GetRenewalList", new object[] {
                        sRequestXml}, this.GetRenewalListOperationCompleted, userState);
        }
        
        private void OnGetRenewalListOperationCompleted(object arg) {
            if ((this.GetRenewalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalListCompleted(this, new GetRenewalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCoverageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCoverageList(string sRequestXml) {
            object[] results = this.Invoke("GetCoverageList", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoverageListAsync(string sRequestXml) {
            this.GetCoverageListAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void GetCoverageListAsync(string sRequestXml, object userState) {
            if ((this.GetCoverageListOperationCompleted == null)) {
                this.GetCoverageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoverageListOperationCompleted);
            }
            this.InvokeAsync("GetCoverageList", new object[] {
                        sRequestXml}, this.GetCoverageListOperationCompleted, userState);
        }
        
        private void OnGetCoverageListOperationCompleted(object arg) {
            if ((this.GetCoverageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoverageListCompleted(this, new GetCoverageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchWithIdentityPlate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchWithIdentityPlate(string sRequestXml) {
            object[] results = this.Invoke("SearchWithIdentityPlate", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchWithIdentityPlateAsync(string sRequestXml) {
            this.SearchWithIdentityPlateAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void SearchWithIdentityPlateAsync(string sRequestXml, object userState) {
            if ((this.SearchWithIdentityPlateOperationCompleted == null)) {
                this.SearchWithIdentityPlateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchWithIdentityPlateOperationCompleted);
            }
            this.InvokeAsync("SearchWithIdentityPlate", new object[] {
                        sRequestXml}, this.SearchWithIdentityPlateOperationCompleted, userState);
        }
        
        private void OnSearchWithIdentityPlateOperationCompleted(object arg) {
            if ((this.SearchWithIdentityPlateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchWithIdentityPlateCompleted(this, new SearchWithIdentityPlateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditProposal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EditProposal(string sRequestXml) {
            object[] results = this.Invoke("EditProposal", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EditProposalAsync(string sRequestXml) {
            this.EditProposalAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void EditProposalAsync(string sRequestXml, object userState) {
            if ((this.EditProposalOperationCompleted == null)) {
                this.EditProposalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProposalOperationCompleted);
            }
            this.InvokeAsync("EditProposal", new object[] {
                        sRequestXml}, this.EditProposalOperationCompleted, userState);
        }
        
        private void OnEditProposalOperationCompleted(object arg) {
            if ((this.EditProposalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProposalCompleted(this, new EditProposalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCreditCardPaymentTypeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCreditCardPaymentTypeList(string sRequestXml) {
            object[] results = this.Invoke("GetCreditCardPaymentTypeList", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentTypeListAsync(string sRequestXml) {
            this.GetCreditCardPaymentTypeListAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void GetCreditCardPaymentTypeListAsync(string sRequestXml, object userState) {
            if ((this.GetCreditCardPaymentTypeListOperationCompleted == null)) {
                this.GetCreditCardPaymentTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditCardPaymentTypeListOperationCompleted);
            }
            this.InvokeAsync("GetCreditCardPaymentTypeList", new object[] {
                        sRequestXml}, this.GetCreditCardPaymentTypeListOperationCompleted, userState);
        }
        
        private void OnGetCreditCardPaymentTypeListOperationCompleted(object arg) {
            if ((this.GetCreditCardPaymentTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCardPaymentTypeListCompleted(this, new GetCreditCardPaymentTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentsByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPaymentsByDate(string sRequestXml) {
            object[] results = this.Invoke("GetPaymentsByDate", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentsByDateAsync(string sRequestXml) {
            this.GetPaymentsByDateAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void GetPaymentsByDateAsync(string sRequestXml, object userState) {
            if ((this.GetPaymentsByDateOperationCompleted == null)) {
                this.GetPaymentsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentsByDateOperationCompleted);
            }
            this.InvokeAsync("GetPaymentsByDate", new object[] {
                        sRequestXml}, this.GetPaymentsByDateOperationCompleted, userState);
        }
        
        private void OnGetPaymentsByDateOperationCompleted(object arg) {
            if ((this.GetPaymentsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentsByDateCompleted(this, new GetPaymentsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProposalUpdateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProposalUpdateClient(string sRequestXml) {
            object[] results = this.Invoke("ProposalUpdateClient", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProposalUpdateClientAsync(string sRequestXml) {
            this.ProposalUpdateClientAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void ProposalUpdateClientAsync(string sRequestXml, object userState) {
            if ((this.ProposalUpdateClientOperationCompleted == null)) {
                this.ProposalUpdateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProposalUpdateClientOperationCompleted);
            }
            this.InvokeAsync("ProposalUpdateClient", new object[] {
                        sRequestXml}, this.ProposalUpdateClientOperationCompleted, userState);
        }
        
        private void OnProposalUpdateClientOperationCompleted(object arg) {
            if ((this.ProposalUpdateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProposalUpdateClientCompleted(this, new ProposalUpdateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProposalUpdateMortgager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProposalUpdateMortgager(string sRequestXml) {
            object[] results = this.Invoke("ProposalUpdateMortgager", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProposalUpdateMortgagerAsync(string sRequestXml) {
            this.ProposalUpdateMortgagerAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void ProposalUpdateMortgagerAsync(string sRequestXml, object userState) {
            if ((this.ProposalUpdateMortgagerOperationCompleted == null)) {
                this.ProposalUpdateMortgagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProposalUpdateMortgagerOperationCompleted);
            }
            this.InvokeAsync("ProposalUpdateMortgager", new object[] {
                        sRequestXml}, this.ProposalUpdateMortgagerOperationCompleted, userState);
        }
        
        private void OnProposalUpdateMortgagerOperationCompleted(object arg) {
            if ((this.ProposalUpdateMortgagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProposalUpdateMortgagerCompleted(this, new ProposalUpdateMortgagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProposalQuestionUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProposalQuestionUpdate(string sRequestXml) {
            object[] results = this.Invoke("ProposalQuestionUpdate", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProposalQuestionUpdateAsync(string sRequestXml) {
            this.ProposalQuestionUpdateAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void ProposalQuestionUpdateAsync(string sRequestXml, object userState) {
            if ((this.ProposalQuestionUpdateOperationCompleted == null)) {
                this.ProposalQuestionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProposalQuestionUpdateOperationCompleted);
            }
            this.InvokeAsync("ProposalQuestionUpdate", new object[] {
                        sRequestXml}, this.ProposalQuestionUpdateOperationCompleted, userState);
        }
        
        private void OnProposalQuestionUpdateOperationCompleted(object arg) {
            if ((this.ProposalQuestionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProposalQuestionUpdateCompleted(this, new ProposalQuestionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PrintDocument(string sRequestXml) {
            object[] results = this.Invoke("PrintDocument", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PrintDocumentAsync(string sRequestXml) {
            this.PrintDocumentAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void PrintDocumentAsync(string sRequestXml, object userState) {
            if ((this.PrintDocumentOperationCompleted == null)) {
                this.PrintDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintDocumentOperationCompleted);
            }
            this.InvokeAsync("PrintDocument", new object[] {
                        sRequestXml}, this.PrintDocumentOperationCompleted, userState);
        }
        
        private void OnPrintDocumentOperationCompleted(object arg) {
            if ((this.PrintDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintDocumentCompleted(this, new PrintDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintDocumentByEMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PrintDocumentByEMail(string sRequestXml) {
            object[] results = this.Invoke("PrintDocumentByEMail", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PrintDocumentByEMailAsync(string sRequestXml) {
            this.PrintDocumentByEMailAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void PrintDocumentByEMailAsync(string sRequestXml, object userState) {
            if ((this.PrintDocumentByEMailOperationCompleted == null)) {
                this.PrintDocumentByEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintDocumentByEMailOperationCompleted);
            }
            this.InvokeAsync("PrintDocumentByEMail", new object[] {
                        sRequestXml}, this.PrintDocumentByEMailOperationCompleted, userState);
        }
        
        private void OnPrintDocumentByEMailOperationCompleted(object arg) {
            if ((this.PrintDocumentByEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintDocumentByEMailCompleted(this, new PrintDocumentByEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePolicyAndPrint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreatePolicyAndPrint(string sRequestXml) {
            object[] results = this.Invoke("CreatePolicyAndPrint", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePolicyAndPrintAsync(string sRequestXml) {
            this.CreatePolicyAndPrintAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CreatePolicyAndPrintAsync(string sRequestXml, object userState) {
            if ((this.CreatePolicyAndPrintOperationCompleted == null)) {
                this.CreatePolicyAndPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePolicyAndPrintOperationCompleted);
            }
            this.InvokeAsync("CreatePolicyAndPrint", new object[] {
                        sRequestXml}, this.CreatePolicyAndPrintOperationCompleted, userState);
        }
        
        private void OnCreatePolicyAndPrintOperationCompleted(object arg) {
            if ((this.CreatePolicyAndPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePolicyAndPrintCompleted(this, new CreatePolicyAndPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProposals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateProposals(string sRequestXml) {
            object[] results = this.Invoke("CreateProposals", new object[] {
                        sRequestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProposalsAsync(string sRequestXml) {
            this.CreateProposalsAsync(sRequestXml, null);
        }
        
        /// <remarks/>
        public void CreateProposalsAsync(string sRequestXml, object userState) {
            if ((this.CreateProposalsOperationCompleted == null)) {
                this.CreateProposalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProposalsOperationCompleted);
            }
            this.InvokeAsync("CreateProposals", new object[] {
                        sRequestXml}, this.CreateProposalsOperationCompleted, userState);
        }
        
        private void OnCreateProposalsOperationCompleted(object arg) {
            if ((this.CreateProposalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProposalsCompleted(this, new CreateProposalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryPolicyDetailCompletedEventHandler(object sender, QueryPolicyDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPolicyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPolicyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PolicySearchCompletedEventHandler(object sender, PolicySearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PolicySearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PolicySearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ApproveProposalCompletedEventHandler(object sender, ApproveProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteProposalCompletedEventHandler(object sender, DeleteProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ApprovalCancellationCompletedEventHandler(object sender, ApprovalCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovalCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovalCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateProposalCompletedEventHandler(object sender, CreateProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CancellationFromInceptionCompletedEventHandler(object sender, CancellationFromInceptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancellationFromInceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancellationFromInceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CancellationMidTermCompletedEventHandler(object sender, CancellationMidTermCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancellationMidTermCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancellationMidTermCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CancellationNonPaymentCompletedEventHandler(object sender, CancellationNonPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancellationNonPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancellationNonPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsuredIncludeEndorsementCompletedEventHandler(object sender, InsuredIncludeEndorsementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsuredIncludeEndorsementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsuredIncludeEndorsementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsuredExcludeEndorsementCompletedEventHandler(object sender, InsuredExcludeEndorsementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsuredExcludeEndorsementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsuredExcludeEndorsementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateEndorsmentCompletedEventHandler(object sender, CreateEndorsmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEndorsmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEndorsmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryDaskPolicyCompletedEventHandler(object sender, QueryDaskPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDaskPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDaskPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRenewalListCompletedEventHandler(object sender, GetRenewalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCoverageListCompletedEventHandler(object sender, GetCoverageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoverageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoverageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SearchWithIdentityPlateCompletedEventHandler(object sender, SearchWithIdentityPlateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchWithIdentityPlateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchWithIdentityPlateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void EditProposalCompletedEventHandler(object sender, EditProposalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProposalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProposalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCreditCardPaymentTypeListCompletedEventHandler(object sender, GetCreditCardPaymentTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCardPaymentTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCardPaymentTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPaymentsByDateCompletedEventHandler(object sender, GetPaymentsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ProposalUpdateClientCompletedEventHandler(object sender, ProposalUpdateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProposalUpdateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProposalUpdateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ProposalUpdateMortgagerCompletedEventHandler(object sender, ProposalUpdateMortgagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProposalUpdateMortgagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProposalUpdateMortgagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ProposalQuestionUpdateCompletedEventHandler(object sender, ProposalQuestionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProposalQuestionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProposalQuestionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PrintDocumentCompletedEventHandler(object sender, PrintDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PrintDocumentByEMailCompletedEventHandler(object sender, PrintDocumentByEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintDocumentByEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintDocumentByEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreatePolicyAndPrintCompletedEventHandler(object sender, CreatePolicyAndPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePolicyAndPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePolicyAndPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateProposalsCompletedEventHandler(object sender, CreateProposalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProposalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProposalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591